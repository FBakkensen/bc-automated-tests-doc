[build-system]
requires = ["setuptools>=69", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "pdf2md"
version = "0.0.1"
description = "Technical PDF to structured Markdown conversion tool (scaffold)"
authors = [ { name = "Your Name" } ]
readme = "README.md"
license = { text = "MIT" }
requires-python = ">=3.11"
dependencies = [
  "pdfplumber>=0.11.0",
  "pdfminer.six>=20221105",
  "pypdf>=4.0.0",
  "pdf2image>=1.17.0",
  "pydantic>=2.0.0",
  "typer>=0.12.0",
  "python-slugify>=8.0.0",
  "Pygments>=2.17.0"
]

[project.optional-dependencies]
dev = [
  "pytest>=8.0.0",
  "pytest-cov>=5.0.0",
  "ruff>=0.5.0",
  "mypy>=1.8.0",
  "types-PyYAML>=6.0.0",
  "pre-commit>=3.7.0",
  "reportlab>=3.6.0",
  "pdfplumber>=0.11.0",
]

[project.scripts]
pdf2md = "pdf2md.cli:app"

[tool.ruff]
line-length = 100
target-version = "py311"

[tool.ruff.lint]
select = [
  "E",   # pycodestyle errors
  "F",   # pyflakes
  "W",   # pycodestyle warnings
  "B",   # flake8-bugbear
  "I",   # isort
  "UP",  # pyupgrade
  "C4",  # flake8-comprehensions
  "SIM", # flake8-simplify
  "ANN", # flake8-annotations
  "N",   # pep8-naming
  "S",   # flake8-bandit (security)
  "RET", # flake8-return
  "RSE", # flake8-raise
  # "TRY", # tryceratops (exceptions best practices) â€” omitted to reduce noise for simple messages
  "PT",  # flake8-pytest-style
  "RUF", # ruff-specific rules
  "ERA", # eradicate commented-out code
]
ignore = []

[tool.ruff.lint.isort]
known-first-party = ["pdf2md"]
force-single-line = false

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.per-file-ignores]
"tests/**/*.py" = ["S101", "D", "ANN"]

[tool.ruff.format]
quote-style = "preserve"
indent-style = "space"
line-ending = "lf"

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_unused_configs = true
no_implicit_optional = true
disallow_incomplete_defs = true
strict_equality = true
pretty = true
disable_error_code = ["import-untyped"]

[[tool.mypy.overrides]]
module = ["pdf2md.*"]
disallow_untyped_defs = true
disallow_any_generics = true

[[tool.mypy.overrides]]
module = ["tests.*", "scripts.*"]
disallow_untyped_defs = false
check_untyped_defs = false
ignore_missing_imports = true

[tool.pytest.ini_options]
addopts = "-q"
filterwarnings = [
  "error",
]
